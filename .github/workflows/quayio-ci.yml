name: Build Container Image(QUAY)
env:
  CONTAINER_REPO: "quay.io"
  CONTAINER_IMAGE_REPO: "kameshsampath/fruits-app"
  PACK_VERSION: "v0.15.1"
  BUILDPACK_BUILDER: "quay.io/kameshsampath/java-11-jvm-builder"
on:
  push:
    branches: [ master ]

jobs:
  containerBuild:
    runs-on: ubuntu-latest
    steps:
       #
       - name: Login to Container Registry
         uses: docker/login-action@v1
         with:
           registry: ${{ env.CONTAINER_REPO }}
           username: ${{ secrets.QUAY_USER }}
           password: ${{ secrets.QUAY_PASSWORD }}
       #
       - name: Checkout
         id: git_checkout
         uses: actions/checkout@v2
       # 
       - name: Determine download URL for latest pack
         id: pack-download-url
         uses: actions/github-script@v2
         with:
          result-encoding: string
          script: |
            return github.repos.getReleaseByTag({
                owner: "buildpacks",
                repo: "pack",
                tag: "${{ env.PACK_VERSION }}"
            }).then(result => {
                return result.data.assets
                  .filter(a => a.name.includes("linux"))
                  .map(a => a.browser_download_url)[0];
            })
       #
       - name: Install pack
         run: |
          curl -s -L -o pack.tgz ${{ steps.pack-download-url.outputs.result }}
          tar -xvf pack.tgz
       # 
       - name: Extract Branch 
         id: github_branch
         run: |
           echo "##[set-output name=branch;]$(echo ${GITHUB_REF##*/})"
       #
       - name: Build and Push to GitHub Container Registry
         id: buildpack_build_push
         run: |
           ./pack build "${{ env.CONTAINER_REPO }}/${{ env.CONTAINER_IMAGE_REPO}}:${{ steps.github_branch.outputs.branch }}" \
             --builder ${{ env.BUILDPACK_BUILDER }} \
             --descriptor project.toml 
           docker tag "${{ env.CONTAINER_REPO }}/${{ env.CONTAINER_IMAGE_REPO}}:${{ steps.github_branch.outputs.branch }}" "${{ env.CONTAINER_REPO }}/${{ env.CONTAINER_IMAGE_REPO}}"
           docker push "${{ env.CONTAINER_REPO }}/${{ env.CONTAINER_IMAGE_REPO}}:${{ steps.github_branch.outputs.branch }}"
           docker push "${{ env.CONTAINER_REPO }}/${{ env.CONTAINER_IMAGE_REPO}}"
           echo "##[set-output name=digest;]$(docker images ${{ env.CONTAINER_REPO }}/${{ env.CONTAINER_IMAGE_REPO}}:${{ steps.github_branch.outputs.branch }}" "${{ env.CONTAINER_REPO }}/${{ env.CONTAINER_IMAGE_REPO}} --no-trunc --quiet)"
       # 
       - name: Knative Service Deploy
         id: kn_service_deploy
         uses: kameshsampath/kn-service-action@v0.1.0
         with: 
           k8s_api_server_url: "${{ secrets.OPENSHIFT_SERVER_URL }}"
           openshift_token: "${{ secrets.OPENSHIFT_TOKEN }}"
           service_name: fruits-app
           service_namespace: demos
           container_image: "${{ env.CONTAINER_REPO }}/${{ env.CONTAINER_IMAGE_REPO}}:${{ steps.buildpack_build_push.outputs.digest }}"
       - name: Show Kn Service URL
         run: echo ${{ steps.kn_service_deploy.outputs.service_url }}